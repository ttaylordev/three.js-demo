import * as THREE from 'three';
import { OrbitControls } from "https://threejs.org/examples/jsm/controls/OrbitControls.js";


var container, stats;
var camera, scene, renderer;
var group;

var targetRotation = 2;
var targetRotationOnMouseDown = 3;
var windowHalfX = window.innerWidth / 2;
var windowHalfY = window.innerHeight / 2;

init();
animate();

function init() {

  container = document.createElement( 'div' );
  document.body.appendChild( container );

  scene = new THREE.Scene();
  camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 1, 1000 );
  camera.position.set( 100, 350);
  scene.add( camera );

  var light = new THREE.PointLight( 0xffffff, 0.9 );
  camera.add( light );

  group = new THREE.Group();
  group.position.y = 0;
  scene.add( group );

  var loader = new THREE.TextureLoader();
  var texture = 'string';
  // var texture = loader.load( "img/metal.png" );
  // texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
  // texture.repeat.set( 0.008, 0.008 );

  function addShape( shape, extrudeSettings, color, x, y, z, rx, ry, rz, s ) {

    // flat shape with texture
    // note: default UVs generated by ShapeGemoetry are simply the x- and y-coordinates of the vertices

    var geometry = new THREE.ExtrudeGeometry( shape, extrudeSettings );

    var mesh = new THREE.Mesh( geometry, new THREE.MeshPhongMaterial( { color: color } ) );
    mesh.position.set( x, y, z );
    mesh.rotation.set( rx, ry, rz );
    mesh.scale.set( s, s, s );
    group.add( mesh );

  }

  // Arc circle 2
  var x = 0, y = 0;
  var arcShape = new THREE.Shape();
  arcShape.moveTo( 0, 0 );
  arcShape.absarc( 10, 10, 13, 0, Math.PI*1.99, false );

  var holePath2 = new THREE.Path();
  holePath2.moveTo( 25, 10 );
  holePath2.absarc( 10, 10, 12, 0, Math.PI*2.01, true );
  arcShape.holes.push( holePath2 );

  var extrudeSettings = { amount: 1.6, bevelEnabled: true, bevelSegments: 30, steps: 30, bevelSize: 0.3, bevelThickness: 1.5, curveSegments: 100 };

  addShape( arcShape, extrudeSettings, 0xffc107,  -40, -22, -50, 0, 0.6, 0, 4 );

  renderer = new THREE.WebGLRenderer( { antialias: true } );
  renderer.setClearColor( 0xf0f0f0 );
  renderer.setPixelRatio( window.devicePixelRatio );
  renderer.setSize( window.innerWidth, window.innerHeight );
  renderer.shadowMapEnabled = true;
  renderer.shadowMapType = THREE.PCFSoftShadowMap;
  group.castShadow = true;
  group.receiveShadow = false;

  container.appendChild( renderer.domElement );
  var controls = new OrbitControls( camera, renderer.domElement );
  renderer.setSize( window.innerWidth, window.innerHeight );
}

function render() {
  renderer.render( scene, camera );
}

function animate() {
  requestAnimationFrame( animate );
  // render(); 
  // tells the browser to call the function everytime it repaints the screen
  // requestAnimationFrame( animate );

  // each shape has properties, rotation, shape, scale
  // arcShape.rotation.x += 0.01;
  // arcShape.rotation.y += 0.005;
  // arcShape.rotation.z += 0.01;

  renderer.render(scene, camera);
}
